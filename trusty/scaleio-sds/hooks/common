#!/bin/bash
my_dir="$(dirname "$0")"
set -eu

function convert-name {
  echo ${1//[-\/]/_}
}
INTERNAL_IFACE=`config-get internal-iface`
if [ -z "$INTERNAL_IFACE" ]; then
  INTERNAL_IP=`unit-get private-address`
else
  INTERNAL_IP=`ip addr show dev $INTERNAL_IFACE | awk '/inet /{split($2,a,"/"); print a[1]}'`
fi
MY_NAME=$(convert-name $JUJU_UNIT_NAME)

STORAGE_IFACE=`config-get storage-iface`
if [ -n "$STORAGE_IFACE" ]; then
  STORAGE_IP=`ip addr show dev $STORAGE_IFACE | awk '/inet /{split($2,a,"/"); print a[1]}'`
else
  STORAGE_IP=''
fi

function server-cmd {
  juju-log "Running server-cmd with '$1'"
  set +e
  puppet apply -e "$1" --detailed-exitcodes
  local exit_code=$?
  if [[ $exit_code == 0 || $exit_code == 2 ]]; then
    juju-log "The run succeeded. Exit code is $exit_code."
  else
    juju-log "The run failed. Exit code is $exit_code."
    exit 1
  fi
  set -e
}

function relation-set-all {
  local rid=`relation-ids scaleio-sds`
  if [ -z "$rid" ]; then return ; fi
  relation-set -r $rid sds_internal_ip_$MY_NAME=$INTERNAL_IP
  relation-set -r $rid sds_storage_ip_$MY_NAME=$STORAGE_IP
  relation-set -r $rid protection_domain=$(config-get protection-domain)
  relation-set -r $rid fault_set=$(config-get fault-set)
  relation-set -r $rid storage_pools=$(config-get storage-pools)
  relation-set -r $rid device_paths=$(config-get device-paths)
  relation-set -r $rid rfcache_device_paths=$(config-get rfcache-device-paths)
  relation-set -r $rid zero_padding_policy=$(config-get zero-padding-policy)
  relation-set -r $rid checksum_mode=$(config-get checksum-mode)
  relation-set -r $rid rfcache_usage=$(config-get rfcache-usage)
  relation-set -r $rid rmcache_usage=$(config-get rmcache-usage)
  relation-set -r $rid rmcache_write_handling_mode=$(config-get rmcache-write-handling-mode)
  relation-set -r $rid scanner_mode=$(config-get scanner-mode)
  relation-set -r $rid spare_percentage=$(config-get spare-percentage)
}

function log-relation {
  local remote_name=$(convert-name $JUJU_REMOTE_UNIT)
  local remote_ip=`relation-get private-address`
  juju-log "$1: $remote_name, $remote_ip"
}
