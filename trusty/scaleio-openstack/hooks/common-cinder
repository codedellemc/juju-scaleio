#!/bin/bash

function update-cinder() {
  local rel_param=''
  if [ -n "${1:-}" ] ; then
    rel_param="-r $1"
  fi

  local rids=`relation-ids scaleio-gw`
  rids_count=`echo $rids | wc -w`
  if (( rids_count < 1 )) ; then
    status-set waiting "Awaiting realtion to scaleio-gw"
    return
  fi
  if (( rids_count > 1 )) ; then
    status-set blocked "More that one realtion found to scaleio-gw"
    return
  fi

  local remote_ip=`leader-get ip`
  local password=`leader-get password`
  local port=`leader-get port`
  local sdcs_ready=`leader-get sdcs_ready`
  local my_ip=`unit-get private-address`
  if ! echo "$sdcs_ready" | grep "$my_ip" ; then
    # this sdc is not ready. waiting.
    status-set waiting "Awaiting local SDC to be connected"
    return
  fi

  local protection_domains=`config-get protection-domains`
  local storage_pools=`config-get storage-pools`
  local verify_server_certificate=`config-get verify-server-certificate`
  local server_certificate_path=`config-get server-certificate-path`
  local round_volume_capacity=`config-get round-volume-capacity`
  local provisioning_type=`config-get provisioning-type`

  local tmp_cfg='/etc/cinder/__cinder-scaleio.conf'
  rm -f $tmp_cfg
  touch $tmp_cfg
  chmod 600 $tmp_cfg

  server-cmd "class { 'scaleio_openstack::cinder':
    gateway_user => 'admin', gateway_password => '$password',
    gateway_ip => '$remote_ip', gateway_port => '$port',
    protection_domains => '$protection_domains', storage_pools => '$storage_pools',
    verify_server_certificate => '$verify_server_certificate',
    server_certificate_path => '$server_certificate_path',
    round_volume_capacity => '$round_volume_capacity',
    cinder_config_file => '$tmp_cfg',
  }"

  conf=`update-config cinder /etc/cinder/cinder.conf $tmp_cfg`

  relation-set $rel_param backend_name='scaleio'
  relation-set $rel_param subordinate_configuration="$conf"
}
