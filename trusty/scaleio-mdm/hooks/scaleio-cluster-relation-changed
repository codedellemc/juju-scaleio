#!/bin/bash
my_dir="$(dirname "$0")"
. "$my_dir/common"

log-relation "ScaleIO Standby MDM joining"
leader=`is-leader`
remote_name=$(convert-name $JUJU_REMOTE_UNIT)

if [ $leader == 'True' ]; then
	role=`leader-get role_$remote_name`
	state=`relation-get state_$remote_name`
else
	role=`leader-get role_$MY_NAME`
	state=`relation-get state_$MY_NAME`
fi
if [ -z "$state" ]; then
	state='unknown'
fi

juju-log "STATE AND ROLE in $MY_NAME: $role, $state"

if [ $leader == 'True' ] ; then
	log-relation "ScaleIO cluster-relation-changed, leader-side"
  
	remote_ip=$(relation-get mgmt_ip_$remote_name)
	standby_ips=`leader-get standby_ips`
	tbs_ready=`leader-get tbs_ready`
	managers_ready=`leader-get managers_ready`

	# Finish adding ready standby
	if [ $state == 'installed' ] ; then
		cluster-cmd "scaleio::mdm { 'mdm $remote_name': name=>'$remote_name', ips=>'$remote_ip', role=>'$role' }"
		status-set active
		if [ $role == 'manager' ] ; then
			managers_ready="$remote_name,$managers_ready"
			standby_ips="$remote_ip,$standby_ips"
			leader-set managers_ready=$managers_ready standby_ips=$standby_ips
		else
			tbs_ready="$remote_name,$tbs_ready"
			leader-set tbs_ready=$tbs_ready
		fi
		juju-log "ScaleIO Standby MDM $remote_name added as $role, standby IPs are $standby_ips"
		# Check if cluster should be resized
		resize-cluster
	fi
else
	log-relation "ScaleIO cluster-relation-changed, slave-side" 

	# Provision a new standby with the required role and notify leader
	if [ $state == 'ordered' ]; then
		if [ $role == 'tb' ]; then
			is_manager=0
		else
			is_manager=1
		fi
		server-cmd "class { 'scaleio::mdm_server': is_manager=>$is_manager }"
		relation-set state_$MY_NAME=installed
		status-set active
		juju-log "ScaleIO MDM $MY_NAME changed role to $role"		
	fi
fi
